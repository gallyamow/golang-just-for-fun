package ratelimiter

import "time"

// TokenBucket - ведро с токенами.
//
// Что делает:
// Позволяет регулировать скорость запросов.
// Позволяет справляться со всплесками трафика.
//
// Пример:
// Ведро вмещает 10 токенов, добавляется 1 токен в секунду.
// Если пришло 5 запросов одновременно, они пройдут сразу, если токены есть.
// Если запросов больше, чем токенов — лишние либо ждут, либо отклоняются.
//
// Используется:
// API, системы с переменным трафиком
//
// Идея:
// Есть “ведро”, которое наполняется токенами с фиксированной скоростью.
// Чтобы выполнить запрос, нужно забрать токен (или несколько) из ведра.
// Если токенов нет — запрос либо блокируется, либо отклоняется.
// Можно делать всплески трафика до ёмкости ведра.
//
// Минусы:
// Нужна память на токены и дату последнего добавления.
type TokenBucket struct {
	// Максимальная ёмкость
	cap    int
	tokens float64
	rate   float64
	last   time.Time
}

func NewTokenBucket(cap int, rate float64) *TokenBucket {
	// Наполненное со старта
	return &TokenBucket{cap, float64(cap), rate, time.Now()}
}

// Allow позволяет проверить возможность без блокировки.
func (tb *TokenBucket) Allow() bool {
	return false
}

func (tb *TokenBucket) Wait() {

}
